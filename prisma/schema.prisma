generator client {
    provider = "prisma-client-js"
}

generator nestjsDto {
    provider                        = "prisma-generator-nestjs-dto"
    output                          = "../src/generated/nestjs-dto"
    classValidation                 = "true"
    outputToNestJsResourceStructure = "true"
    prettier                        = "true"
    requiredResponseApiProperty     = "true"
}

datasource db {
    provider  = "postgresql"
    url       = env("DATABASE_URL")
    directUrl = env("DIRECT_URL")
}

model auth_trigger_log {
    id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
    message    String?
    payload    Json?
    created_at DateTime? @default(now()) @db.Timestamp(6)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model Auths {
    id          String   @id @default(uuid())
    provider    String
    userId      String?  @unique
    providerUid String   @unique @db.Uuid
    user        Users?   @relation(fields: [userId], references: [id])
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt

    @@unique([provider, providerUid])
}

model Users {
    id        String   @id @default(uuid())
    email     String?  @unique
    auth      Auths?
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
